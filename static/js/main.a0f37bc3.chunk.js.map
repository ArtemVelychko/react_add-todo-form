{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","id","completed","cn","TodoList","todos","map","username","userId","usersFromServer","find","App","useState","setTodo","setTitle","userValue","setUserValue","titleEmpty","setTitleEmpty","userEmpty","setUserEmpty","action","method","onSubmit","event","preventDefault","maxId","Math","max","t","type","placeholder","value","onChange","element","target","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"4OAMaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCHMI,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EACED,EADFC,MAAOP,EACLM,EADKN,KAAMQ,EACXF,EADWE,GAAIC,EACfH,EADeG,UAGnB,OACE,0BACE,UAASD,EACTL,UAAWO,IACT,WACA,CAAE,sBAAuBD,IAJ7B,UAOE,oBAAIN,UAAU,kBAAd,SACGI,IAGFP,GAAQ,cAAC,EAAD,CAA0BA,KAAMA,GAAjBA,EAAKC,UCjBtBU,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAAST,UAAU,WAAnB,SACGS,EAAMC,KAAI,SAACP,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACN,UAASA,EAAKE,IAFTF,EAAKE,UCbL,GACb,CACEA,GAAI,EACJP,KAAM,gBACNa,SAAU,OACVZ,MAAO,qBAET,CACEM,GAAI,EACJP,KAAM,eACNa,SAAU,YACVZ,MAAO,qBAET,CACEM,GAAI,EACJP,KAAM,mBACNa,SAAU,WACVZ,MAAO,sBAET,CACEM,GAAI,EACJP,KAAM,mBACNa,SAAU,WACVZ,MAAO,6BAET,CACEM,GAAI,EACJP,KAAM,mBACNa,SAAU,SACVZ,MAAO,4BAET,CACEM,GAAI,EACJP,KAAM,uBACNa,SAAU,mBACVZ,MAAO,2BAET,CACEM,GAAI,EACJP,KAAM,kBACNa,SAAU,eACVZ,MAAO,0BAET,CACEM,GAAI,EACJP,KAAM,2BACNa,SAAU,gBACVZ,MAAO,wBAET,CACEM,GAAI,EACJP,KAAM,kBACNa,SAAU,WACVZ,MAAO,2BAET,CACEM,GAAI,GACJP,KAAM,qBACNa,SAAU,iBACVZ,MAAO,2BC9CX,IAAMU,ECbS,CACb,CACEJ,GAAI,EACJD,MAAO,qBACPE,WAAW,EACXM,OAAQ,GAEV,CACEP,GAAI,GACJD,MAAO,kBACPE,WAAW,EACXM,OAAQ,GAEV,CACEP,GAAI,EACJD,MAAO,qCACPE,WAAW,EACXM,OAAQ,IDJ0BF,KAAI,SAAAP,GAAI,kCACzCA,GADyC,IAE5CN,MANee,EAMDT,EAAKS,OALZC,EAAgBC,MAAK,SAAAjB,GAAI,OAAIA,EAAKQ,KAAOO,MAAW,QAD7D,IAAiBA,KASJG,EAAgB,WAC3B,MAAwBC,mBAASP,GAAjC,mBAAON,EAAP,KAAac,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAOZ,EAAP,KAAcc,EAAd,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAoCA,OACE,sBAAKxB,UAAU,MAAf,UACE,+CAEA,uBACEyB,OAAO,aACPC,OAAO,OACPC,SAzCe,SAACC,GACpBA,EAAMC,iBAEN,IAAMC,EAAQC,KAAKC,IAAL,MAAAD,KAAI,YAAQ5B,EAAKO,KAAI,SAACuB,GAAD,OAAOA,EAAE5B,OAA1B,QAA+B,KAEjDiB,GAAelB,GACfoB,GAAcL,GAEVf,GAASe,IACXF,EAAQ,GAAD,mBAAKd,GAAL,CACL,CACEE,GAAIyB,EAAQ,EACZ1B,QACAE,WAAW,EACXM,OAAQ,EACRf,KAAMgB,EAAgBC,MAAK,SAAAjB,GAAI,OAAIsB,IAActB,EAAKC,SAAS,SAInEoB,EAAS,IACTE,EAAa,MAkBb,UAKE,sBAAKpB,UAAU,QAAf,UACG,UACD,uBACEkC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOhC,EACPiC,SA1BU,SAACC,GACnBpB,EAASoB,EAAQC,OAAOH,OACxBd,GAAc,MA2BPD,GACC,sBAAMrB,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACG,SACD,yBACE,UAAQ,aACRwC,aAAa,GACbJ,MAAOjB,EACPkB,SAnCS,SAACC,GAClBlB,EAAakB,EAAQC,OAAOH,OAC5BZ,GAAa,IA6BP,UAME,wBACEiB,UAAQ,EACRL,MAAM,GAFR,2BAMCvB,EAAgBH,KAAI,SAACb,GAAD,OACnB,wBAAQuC,MAAOvC,EAAKC,KAApB,SAA2CD,EAAKC,MAAjBD,EAAKC,YAIvCyB,GACC,sBAAMvB,UAAU,QAAhB,qCAIJ,wBACEkC,KAAK,SACL,UAAQ,eAFV,oBAQF,cAAC,EAAD,CAAUzB,MAAON,QEhHvBuC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a0f37bc3.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title, user, id, completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo key={user.name} user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n          data-id={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId?: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todo, setTodo] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [userValue, setUserValue] = useState('');\n  const [titleEmpty, setTitleEmpty] = useState(false);\n  const [userEmpty, setUserEmpty] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const maxId = Math.max(...todo.map((t) => t.id), 0);\n\n    setTitleEmpty(!title);\n    setUserEmpty(!userValue);\n\n    if (title && userValue) {\n      setTodo([...todo,\n        {\n          id: maxId + 1,\n          title,\n          completed: false,\n          userId: 1,\n          user: usersFromServer.find(user => userValue === user.name) || null,\n        },\n      ]);\n\n      setTitle('');\n      setUserValue('');\n    }\n  };\n\n  const handleTitle = (element: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(element.target.value);\n    setTitleEmpty(false);\n  };\n\n  const handleUser = (element: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserValue(element.target.value);\n    setUserEmpty(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          {'Title: '}\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitle}\n          />\n\n          {titleEmpty && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          {'User: '}\n          <select\n            data-cy=\"userSelect\"\n            defaultValue=\"\"\n            value={userValue}\n            onChange={handleUser}\n          >\n            <option\n              disabled\n              value=\"\"\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option value={user.name} key={user.name}>{user.name}</option>\n            ))}\n          </select>\n\n          {userEmpty && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todo} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}